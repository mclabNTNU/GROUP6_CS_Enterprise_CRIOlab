%implements s40_b0_0mi5e_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
uint32_T tseed;
int32_T r;
int32_T t;
real_T tmp;
%closefile localVarDecl
%assign tlcInitializeConditionsFcnOfS38B1 = OpaqueTLCBlockFcn("InitializeConditions", 38, 1, 2, 5)
%assign tlcInitializeConditionsFcnOfS38B28 = OpaqueTLCBlockFcn("InitializeConditions", 38, 28, 2, 5)
%assign tlcInitializeConditionsFcnOfS38B35 = OpaqueTLCBlockFcn("InitializeConditions", 38, 35, 2, 5)
%assign tlcInitializeConditionsFcnOfS38B86 = OpaqueTLCBlockFcn("InitializeConditions", 38, 86, 2, 5)
%assign tlcInitializeConditionsFcnOfS38B172 = OpaqueTLCBlockFcn("InitializeConditions", 38, 172, 2, 5)
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
%<tlcInitializeConditionsFcnOfS38B1>\
/* InitializeConditions for Memory: '<S63>/counter' */
ctrl_student_HIL_DW.counter_PreviousInput = ctrl_student_HIL_P.counter_X0;
/* InitializeConditions for RandomNumber: '<S69>/White Noise' */
tmp = floor(ctrl_student_HIL_P.WhiteNoise_Seed);
if (rtIsNaN(tmp) || rtIsInf(tmp)) {
    tmp = 0.0;
} else {
    tmp = fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? (uint32_T)-(int32_T)(uint32_T)-tmp : (uint32_T)tmp;
r = (int32_T)(tseed >> 16U);
t = (int32_T)(tseed & 32768U);
tseed = ((((tseed - ((uint32_T)r << 16U)) + t) << 16U) + t) + r;
if (tseed < 1U) {
    tseed = 1144108930U;
} else {
    if (tseed > 2147483646U) {
        tseed = 2147483646U;
    }
}
ctrl_student_HIL_DW.RandSeed = tseed;
ctrl_student_HIL_DW.NextOutput = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&ctrl_student_HIL_DW.RandSeed"], 2, 5, 0))> * ctrl_student_HIL_P.WhiteNoise_StdDev + ctrl_student_HIL_P.WhiteNoise_Mean;
/* End of InitializeConditions for RandomNumber: '<S69>/White Noise' */

/* InitializeConditions for RandomNumber: '<S70>/White Noise' */
tmp = floor(ctrl_student_HIL_P.WhiteNoise_Seed_l);
if (rtIsNaN(tmp) || rtIsInf(tmp)) {
    tmp = 0.0;
} else {
    tmp = fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? (uint32_T)-(int32_T)(uint32_T)-tmp : (uint32_T)tmp;
r = (int32_T)(tseed >> 16U);
t = (int32_T)(tseed & 32768U);
tseed = ((((tseed - ((uint32_T)r << 16U)) + t) << 16U) + t) + r;
if (tseed < 1U) {
    tseed = 1144108930U;
} else {
    if (tseed > 2147483646U) {
        tseed = 2147483646U;
    }
}
ctrl_student_HIL_DW.RandSeed_i = tseed;
ctrl_student_HIL_DW.NextOutput_o = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&ctrl_student_HIL_DW.RandSeed_i"], 2, 5, 1))> * ctrl_student_HIL_P.WhiteNoise_StdDev_l + ctrl_student_HIL_P.WhiteNoise_Mean_d;
/* End of InitializeConditions for RandomNumber: '<S70>/White Noise' */

/* InitializeConditions for RandomNumber: '<S68>/White Noise' */
tmp = floor(ctrl_student_HIL_P.WhiteNoise_Seed_i);
if (rtIsNaN(tmp) || rtIsInf(tmp)) {
    tmp = 0.0;
} else {
    tmp = fmod(tmp, 4.294967296E+9);
}
tseed = tmp < 0.0 ? (uint32_T)-(int32_T)(uint32_T)-tmp : (uint32_T)tmp;
r = (int32_T)(tseed >> 16U);
t = (int32_T)(tseed & 32768U);
tseed = ((((tseed - ((uint32_T)r << 16U)) + t) << 16U) + t) + r;
if (tseed < 1U) {
    tseed = 1144108930U;
} else {
    if (tseed > 2147483646U) {
        tseed = 2147483646U;
    }
}
ctrl_student_HIL_DW.RandSeed_d = tseed;
ctrl_student_HIL_DW.NextOutput_p = %<(SLibCGCallSubFcn("rt_nrand_Upu32_Yd_f_pw_snf", ["&ctrl_student_HIL_DW.RandSeed_d"], 2, 5, 2))> * ctrl_student_HIL_P.WhiteNoise_StdDev_j + ctrl_student_HIL_P.WhiteNoise_Mean_i;
/* End of InitializeConditions for RandomNumber: '<S68>/White Noise' */

/* InitializeConditions for Memory: '<S64>/Hold' */
ctrl_student_HIL_DW.Hold_PreviousInput[0] = ctrl_student_HIL_P.Hold_X0;
ctrl_student_HIL_DW.Hold_PreviousInput[1] = ctrl_student_HIL_P.Hold_X0;
ctrl_student_HIL_DW.Hold_PreviousInput[2] = ctrl_student_HIL_P.Hold_X0;
/* InitializeConditions for Memory: '<S5>/Memory2' */
ctrl_student_HIL_DW.Memory2_PreviousInput = ctrl_student_HIL_P.Memory2_X0;
/* InitializeConditions for Memory: '<S5>/Memory1' */
ctrl_student_HIL_DW.Memory1_PreviousInput = ctrl_student_HIL_P.Memory1_X0;
/* InitializeConditions for Memory: '<S5>/Memory' */
ctrl_student_HIL_DW.Memory_PreviousInput = ctrl_student_HIL_P.Memory_X0;
/* InitializeConditions for Memory: '<S33>/Memory' */
ctrl_student_HIL_DW.Memory_PreviousInput_n = ctrl_student_HIL_P.Memory_X0_e;
%<tlcInitializeConditionsFcnOfS38B28>\
/* InitializeConditions for Memory: '<S34>/Memory' */
ctrl_student_HIL_DW.Memory_PreviousInput_p = ctrl_student_HIL_P.Memory_X0_p;
%<tlcInitializeConditionsFcnOfS38B35>\
/* InitializeConditions for Memory: '<S46>/Memory2' */
ctrl_student_HIL_DW.Memory2_PreviousInput_a = ctrl_student_HIL_P.Memory2_X0_c;
/* InitializeConditions for Memory: '<S46>/Memory1' */
ctrl_student_HIL_DW.Memory1_PreviousInput_h[0] = ctrl_student_HIL_P.Memory1_X0_j[0];
ctrl_student_HIL_DW.Memory1_PreviousInput_h[1] = ctrl_student_HIL_P.Memory1_X0_j[1];
/* InitializeConditions for Integrator: '<S55>/nuHat' */
ctrl_student_HIL_X.nuHat_CSTATE[0] = ctrl_student_HIL_P.nuHat_IC[0];
ctrl_student_HIL_X.nuHat_CSTATE[1] = ctrl_student_HIL_P.nuHat_IC[1];
ctrl_student_HIL_X.nuHat_CSTATE[2] = ctrl_student_HIL_P.nuHat_IC[2];
/* InitializeConditions for Memory: '<S11>/Memory1' */
ctrl_student_HIL_DW.Memory1_PreviousInput_b = ctrl_student_HIL_P.Memory1_X0_k;
%<tlcInitializeConditionsFcnOfS38B86>\
/* InitializeConditions for Memory: '<S13>/Memory' */
ctrl_student_HIL_DW.Memory_PreviousInput_e = ctrl_student_HIL_P.Memory_X0_eh;
/* InitializeConditions for Memory: '<S46>/Memory' */
ctrl_student_HIL_DW.Memory_PreviousInput_h = ctrl_student_HIL_P.Memory_X0_h;
/* InitializeConditions for Integrator: '<S53>/bHat' */
ctrl_student_HIL_X.bHat_CSTATE[0] = ctrl_student_HIL_P.bHat_IC;
ctrl_student_HIL_X.bHat_CSTATE[1] = ctrl_student_HIL_P.bHat_IC;
ctrl_student_HIL_X.bHat_CSTATE[2] = ctrl_student_HIL_P.bHat_IC;
%<tlcInitializeConditionsFcnOfS38B172>\
%<SLibInsertInitPeriodicCStatesFcn(system)>
%closefile cfgTxt
%<cfgTxt>
%assign fcnProtoType = ""
%openfile fcnProtoType
static void InitializeConditions(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(2, 5, fcnProtoType)>
%<LibSetSystemField(system, "CachedInitializeLocalVars", localVarDecl)>
%endfunction
